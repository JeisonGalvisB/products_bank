version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: products-bank-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: products_bank
      MYSQL_USER: products_user
      MYSQL_PASSWORD: products_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - products-bank-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: products-bank-backend
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: products_bank
      DB_USER: products_user
      DB_PASSWORD: products_password
      JWT_SECRET: your_jwt_secret_key_change_in_production_min_32_chars
      JWT_EXPIRATION: 24h
      BCRYPT_ROUNDS: 10
      CORS_ORIGIN: http://localhost
      RECAPTCHA_SECRET_KEY: ${RECAPTCHA_SECRET_KEY}
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
    ports:
      - "5000:5000"
    volumes:
      - ./backend/src:/app/src
      - ./backend/logs:/app/logs
    networks:
      - products-bank-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: http://localhost:5000/api
        REACT_APP_RECAPTCHA_SITE_KEY: ${RECAPTCHA_SITE_KEY}
        REACT_APP_ENV: production
    container_name: products-bank-frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "80:80"
    networks:
      - products-bank-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

volumes:
  mysql_data:
    driver: local

networks:
  products-bank-network:
    driver: bridge